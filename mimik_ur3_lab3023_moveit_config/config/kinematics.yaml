eef_gripper:
   # KDL
   # ---
   # kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.005

   # Trac-IK
   # -------
   # kinematics_solver: trac_ik_kinematics_plugin/TRAC_IKKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.05

   # The solver type can be one of the following:
   # Speed: returns very quickly the first solution found
   # Distance: runs for the full timeout_in_secs, then returns the solution that minimizes SSE from the seed
   # Manip1: runs for full timeout, returns solution that maximizes sqrt(det(J*J^T))
   # Manip2: runs for full timeout, returns solution that minimizes cond(J) = |J|*|J^-1|

   # solve_type: Speed

   # Deterministic Trac-IK
   # ---------------------
   kinematics_solver: deterministic_trac_ik_kinematics_plugin/Deterministic_TRAC_IKKinematicsPlugin
   kinematics_solver_search_resolution: 0.005
   kinematics_solver_timeout: 0.05

   # The solver type can be one of the following:
   # Speed: returns very quickly the first solution found
   # Distance: runs for the full timeout_in_secs, then returns the solution that minimizes SSE from the seed
   # Manip1: runs for full timeout, returns solution that maximizes sqrt(det(J*J^T))
   # Manip2: runs for full timeout, returns solution that minimizes cond(J) = |J|*|J^-1|

   solve_type: Speed

   # BioIK
   # -----
   # kinematics_solver: bio_ik/BioIKKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.005
   # kinematics_solver_attempts: 1
eef_pipette:
   # KDL
   # ---
   # kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.005

   # Trac-IK
   # -------
   # kinematics_solver: trac_ik_kinematics_plugin/TRAC_IKKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.05

   # The solver type can be one of the following:
   # Speed: returns very quickly the first solution found
   # Distance: runs for the full timeout_in_secs, then returns the solution that minimizes SSE from the seed
   # Manip1: runs for full timeout, returns solution that maximizes sqrt(det(J*J^T))
   # Manip2: runs for full timeout, returns solution that minimizes cond(J) = |J|*|J^-1|

   # solve_type: Speed

   # Deterministic Trac-IK
   # ---------------------
   kinematics_solver: deterministic_trac_ik_kinematics_plugin/Deterministic_TRAC_IKKinematicsPlugin
   kinematics_solver_search_resolution: 0.005
   kinematics_solver_timeout: 0.05

   # The solver type can be one of the following:
   # Speed: returns very quickly the first solution found
   # Distance: runs for the full timeout_in_secs, then returns the solution that minimizes SSE from the seed
   # Manip1: runs for full timeout, returns solution that maximizes sqrt(det(J*J^T))
   # Manip2: runs for full timeout, returns solution that minimizes cond(J) = |J|*|J^-1|

   solve_type: Speed

   # BioIK
   # -----
   # kinematics_solver: bio_ik/BioIKKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.005
   # kinematics_solver_attempts: 1

eef_camera_color:
   # KDL
   # ---
   # kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.005

   # Trac-IK
   # -------
   # kinematics_solver: trac_ik_kinematics_plugin/TRAC_IKKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.05

   # The solver type can be one of the following:
   # Speed: returns very quickly the first solution found
   # Distance: runs for the full timeout_in_secs, then returns the solution that minimizes SSE from the seed
   # Manip1: runs for full timeout, returns solution that maximizes sqrt(det(J*J^T))
   # Manip2: runs for full timeout, returns solution that minimizes cond(J) = |J|*|J^-1|

   # solve_type: Speed

   # Deterministic Trac-IK
   # ---------------------
   kinematics_solver: deterministic_trac_ik_kinematics_plugin/Deterministic_TRAC_IKKinematicsPlugin
   kinematics_solver_search_resolution: 0.005
   kinematics_solver_timeout: 0.05

   # The solver type can be one of the following:
   # Speed: returns very quickly the first solution found
   # Distance: runs for the full timeout_in_secs, then returns the solution that minimizes SSE from the seed
   # Manip1: runs for full timeout, returns solution that maximizes sqrt(det(J*J^T))
   # Manip2: runs for full timeout, returns solution that minimizes cond(J) = |J|*|J^-1|

   solve_type: Speed

   # BioIK
   # -----
   # kinematics_solver: bio_ik/BioIKKinematicsPlugin
   # kinematics_solver_search_resolution: 0.005
   # kinematics_solver_timeout: 0.005
   # kinematics_solver_attempts: 1
